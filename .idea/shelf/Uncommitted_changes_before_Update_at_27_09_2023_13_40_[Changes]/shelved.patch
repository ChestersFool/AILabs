Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from tkinter import *\r\n\r\nlasx, lasy = 0, 0\r\ncanvas_width, canvas_height = 300, 300\r\nsegment_width, segment_height = 100, 100\r\napp = Tk()\r\napp.geometry(\"400x400\")\r\n\r\n\r\ndef get_x_and_y(event):\r\n    global lasx, lasy\r\n    lasx, lasy = event.x, event.y\r\n\r\n\r\ndef draw_smth(event):\r\n    global lasx, lasy\r\n    canvas.create_line((lasx, lasy, event.x, event.y), fill='black', width=10)\r\n    lasx, lasy = event.x, event.y\r\n\r\n\r\ncanvas = Canvas(app, bg='white', height=canvas_height, width=canvas_width)\r\n\r\n# canvas.pack(anchor='nw', fill='both', expand=1)\r\ncanvas.place(x=50, y=10)\r\n\r\ncanvas.bind(\"<Button-1>\", get_x_and_y)\r\ncanvas.bind(\"<B1-Motion>\", draw_smth)\r\n\r\n\r\ndef get_segment(pixels_color_matrix, row, col):\r\n    black_pixels = 0\r\n    for i in range(segment_height):\r\n        for j in range(segment_width):\r\n            color = pixels_color_matrix[i + row * segment_height][j + col * segment_width]\r\n            if color == 1:\r\n                black_pixels += 1\r\n\r\n    if black_pixels >= (segment_width * segment_width) / 2:\r\n        return 1\r\n    return 0\r\n\r\n\r\ndef to_do_some_shit():\r\n    pixels_color_matrix = get_matrix_pixels()\r\n    vector = []\r\n    for i in range(int(canvas_height / segment_height)):\r\n        for j in range(int(canvas_width / segment_width)):\r\n            vector.append(get_segment(pixels_color_matrix, i, j))\r\n    print(vector)\r\n\r\n\r\ndef get_matrix_pixels():\r\n    pixels_color_matrix = []\r\n    for i in range(canvas_height):\r\n        pixels_color_array = []\r\n        for j in range(canvas_width):\r\n            color = get_pixel_color(j, i)\r\n            if color == 'white':\r\n                color = 0\r\n            else:\r\n                color = 1\r\n            pixels_color_array.append(color)\r\n            print(color, end=\"\")\r\n        print()\r\n        pixels_color_matrix.append(pixels_color_array)\r\n\r\n    return pixels_color_matrix\r\n\r\n\r\ndef get_pixel_color(x, y):\r\n    # canvas use different coordinates than turtle\r\n    # y = -y\r\n    # find IDs of all objects in rectangle (x, y, x, y)\r\n    ids = canvas.find_overlapping(x, y, x, y)\r\n    # if found objects\r\n    if ids:\r\n        # get ID of last object (top most)\r\n        index = ids[-1]\r\n        # get its color\r\n        color = canvas.itemcget(index, \"fill\")\r\n        # if it has color then return it\r\n        if color:\r\n            return color\r\n    # if there was no object then return \"white\" - background color in turtle\r\n    return \"white\"  # default color\r\n\r\n\r\nbtn = Button(text=\"start\", command=to_do_some_shit)\r\nbtn.place(x=10, y=330)\r\n\r\napp.mainloop()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 0d46f4013268ced44fdc97a3bea3db5b933c8bcb)
+++ b/main.py	(date 1695811216955)
@@ -35,9 +35,9 @@
             if color == 1:
                 black_pixels += 1
 
-    if black_pixels >= (segment_width * segment_width) / 2:
-        return 1
-    return 0
+    # if black_pixels >= (segment_width * segment_width) / 2:
+    #     return 1
+    return black_pixels
 
 
 def to_do_some_shit():
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"86ae13ab-10d1-47d9-958b-efd02f935c7d\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2Vf8fo7mPlNPshVcV3wxwEBxJOx\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mykhailo/PycharmProjects/AILabs&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"AILabs\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"86ae13ab-10d1-47d9-958b-efd02f935c7d\" name=\"Changes\" comment=\"\" />\r\n      <created>1695215879801</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1695215879801</updated>\r\n      <workItem from=\"1695215880823\" duration=\"36000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0d46f4013268ced44fdc97a3bea3db5b933c8bcb)
+++ b/.idea/workspace.xml	(date 1695377209733)
@@ -1,16 +1,22 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="86ae13ab-10d1-47d9-958b-efd02f935c7d" name="Changes" comment="" />
+    <list default="true" id="86ae13ab-10d1-47d9-958b-efd02f935c7d" name="Changes" comment="start">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 4
 }</component>
   <component name="ProjectId" id="2Vf8fo7mPlNPshVcV3wxwEBxJOx" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
@@ -20,6 +26,7 @@
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
     &quot;last_opened_file_path&quot;: &quot;C:/Users/Mykhailo/PycharmProjects/AILabs&quot;,
     &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
@@ -57,10 +64,51 @@
       <option name="presentableId" value="Default" />
       <updated>1695215879801</updated>
       <workItem from="1695215880823" duration="36000" />
+      <workItem from="1695215927755" duration="237000" />
+      <workItem from="1695377204942" duration="5000" />
     </task>
+    <task id="LOCAL-00001" summary="start">
+      <option name="closed" value="true" />
+      <created>1695216030093</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1695216030093</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="master" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="start" />
+    <option name="LAST_COMMIT_MESSAGE" value="start" />
+  </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/AILabs$main.coverage" NAME="main Coverage Results" MODIFIED="1695215977718" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+  </component>
 </project>
\ No newline at end of file
